name: Build

on:
  push:
    branches: [ 'build', 'kernel-*' ]
  workflow_dispatch:

env:
  REPO_PATH: ${{ github.workspace }}/repo
  PACKAGES_PATH: ${{ github.workspace }}/packages
  KEYS_PATH: ${{ github.workspace }}/keys
  BUILD_PATH: ${{ github.workspace }}/build
  OUTPUT_PATH: ${{ github.workspace }}/output
  TARGET_BRANCH: kernel-5.16
  PACKAGES_ARTIFACT: 'cb1-kernel-packages'

jobs:

  # Build job
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 300 ## TODO: Increase this if necessary! Benchmark a bit, look into caching etc.
    strategy:
      fail-fast: true
    steps:

      - name: Checkout Repository
        timeout-minutes: 15
        uses: actions/checkout@v3
        with:
          ref: ${{ env.TARGET_BRANCH }}

      - name: Prepare Environment
        if: success()
        timeout-minutes: 5
        run: mkdir -p ${{ env.REPO_PATH }} ${{ env.PACKAGES_PATH }} ${{ env.KEYS_PATH }}

      - name: Download Packages
        if: success()
        timeout-minutes: 15
        uses: actions/download-artifact@v3
        id: download-packages
        with:
          name: ${{ env.PACKAGES_ARTIFACT }}
          path: ${{ env.PACKAGES_PATH }}

      - name: Build Packages
        if: success()
        timeout-minutes: 120
        uses: didstopia/cb1-kernel-builder@master
        with:
          repo: github.com/${{ github.repository }}
          branch: ${{ env.TARGET_BRANCH }}
          build-path: ${{ env.BUILD_PATH }}
          output-path: ${{ env.OUTPUT_PATH }}
          target-board: h616
          target-branch: current      # FIXME: Set this to something more appropriate?
          target-build-option: kernel # FIXME: We also want to build u-boot AND the image, right?!
          target-release: bullseye    # FIXME: Set this to something more appropriate?

      - name: Copy Packages
        if: success()
        timeout-minutes: 5
        run: |
          cp -fr ${{ env.OUTPUT_PATH }}/debs/*.deb ${{ env.PACKAGES_PATH }}/

      - name: List Packages
        if: success()
        run: ls -la ${{ env.PACKAGES_PATH }}/

      - name: Upload Packages
        if: success()
        timeout-minutes: 15
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PACKAGES_ARTIFACT }}
          path: ${{ steps.download-packages.outputs.download-path }}
          retention-days: 30
          if-no-files-found: error

      - name: Build Apt Repository
        if: success()
        timeout-minutes: 5
        uses: didstopia/simple-apt-repo@master
        with:
          # timezone: Europe/Helsinki
          timezone: UTC
          repo-origin: Didstopia CB1 Apt Repo
          repo-label: Didstopia BTT CB1 Apt Repository (2023)
          repo-version: 0.1.0
          repo-description: Didstopia custom apt repository for the BIGTREETECH CB1 hardware, including both stock and custom kernel packages.
          key-email: support@didstopia.com
          key-public: ${{ secrets.APT_REPO_PUBLIC_KEY }}
          key-private: ${{ secrets.APT_REPO_PRIVATE_KEY }}

      - name: Generate Repository File Index
        uses: jayanta525/github-pages-directory-listing@v3.0.0
        with:
          FOLDER: repo

      - name: List Repository Contents
        if: success()
        run: ls -la ${{ env.REPO_PATH }}/

      - name: Upload Apt Repository
        if: success()
        timeout-minutes: 15
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.REPO_PATH }}/
          retention-days: 1

  # Deploy job
  deploy:
    name: Deploy

    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
      - name: Display Deployment URL
        run: |
          echo "::notice::${{ steps.deployment.outputs.page_url }}"
          echo "URL=${{ steps.deployment.outputs.page_url }}" >> $GITHUB_OUTPUT
